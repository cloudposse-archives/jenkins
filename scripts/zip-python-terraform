#!/bin/bash
set -eu

if [ $# -eq 1 ]
  then
    cd $1
fi

#pwd
working_dir=$(pwd)
virtual_env_dir="build/virtualenv"

# new hash production
hashables=(
$(find src -type f ! -name "*pyc")
requirements.txt
)
echo "Hashables: ${hashables[*]}"

shasums=''
## compute a hash of all files in the directory
for hashee in "${hashables[@]}"
do
    shasums+=$(shasum "$hashee")
done
new_hash=$(echo -n "$shasums" | shasum - | cut -d " " -f 1)

# get the last generated file hash if it exists
prev_hash=$(cat dir_hash.sha 2>/dev/null || echo "")

echo "New hash: $new_hash Prev hash: $prev_hash"

if [[ ${prev_hash} != ${new_hash} ]]
 then
    rm -rf build
    mkdir -p build/deployment
    mkdir -p ${virtual_env_dir}
    cp -r src/* build/deployment/

    export TMPDIR="/agent/tmp" # hardcoded alternative tmp dir
    export VIRTUAL_ENV_DISABLE_PROMPT=true

    virtualenv "$virtual_env_dir"
    source "$virtual_env_dir"/bin/activate

    python -m pip install six
    python -m pip install -r requirements.txt
    cp -r "$virtual_env_dir"/lib/python2.7/site-packages/* build/deployment/

    cd build/deployment;
    #force all files to have the same timestamp so SHA can be reproducible for zip files with unchanged contents
    find . -newermt '2016-07-20 08:19:00' -exec touch -c -t 201607200819.00 {} \;
    nice -n 10 zip -X -r ../lambda.zip *  -x "*.pyc"

    cd ../../; rm -r build/deployment ; rm -r $virtual_env_dir

    echo ${new_hash} > dir_hash.sha
    echo "Directory hash: $new_hash"
    echo "ZIP_LOCATION=$working_dir/build/lambda.zip"
else
    echo "${1-.} : No change detected, won't rezip"
    echo "ZIP_LOCATION=$working_dir/build/lambda.zip"
fi


